import List

--
data Patient where
  Patient
    (Int    [Private]) -- Patient id
    (String [Private]) -- Patient name
    (Int    [Public])  -- Patient age

meanAge : (List Patient) [0..1] → Int [Public]
meanAge xs = meanAge' xs [0] [0]

meanAge' : (List Patient) [0..1] -- Patient database
       → Int [Public]   -- Current age sum
       → Int [Public]   -- Count
       → Int [Public]  -- Mean age viewed public

meanAge' [Next (Patient [_] [_] [age]) xs] [total] [n] =
   meanAge' [xs] [age + total] [n+1];

meanAge' [Empty] [total] [n] = [div total n]

main : Int [Public]
main = meanAge [Next (Patient [1] ["Alice"] [32]) (Next (Patient [2] ["Bob"] [16]) Empty)]

-- Rejected
-- names : (List Patient) [0..1] → String [Public]
-- names [Next (Patient [_] [name] [_]) xs] =
--  let [allNames] = names [xs] in [name `stringAppend` allNames];
-- names [Empty] = [""]
