-- Effectful example in Granule

-- Similar to Haskell
-- main :: IO a
-- main = readLn

echo : (Int -> <Int> []) -> Int |2| -> <Int> [W]
echo = \f -> \xBox ->
        let |x : Int| Nat = xBox in
	let <a : Int> = write x
	in f x

dub : Int -> <Int> []
dub = \x -> <x * 2>

foo : Int |2| -> Int |4| -> Int |2|
foo |x| |y| = |(x + y + y)|

main : <Int> [W]
main = echo dub |42|
