-- gr --no-eval

-- Hello TLLA
dub : Int [2] → Int
dub [x] = x + x

trip : Int [3] → Int
trip [x] = x + x + x

flatten : ∀ {c : Nat, d : Nat} . (Int [c+1]) [d+1] → Int [(c+1) * (d+1)]
flatten [[x]] = [x]

twice : ∀ {n : Nat} . (Int [n] → Int) [2] → Int [2 * n] → Int
twice [f] [x] = f [x] + f [x]

secret : Int [Private]
secret = [0309]

hash : ∀ {l : Level} . Int [l] → Int [l]
hash [x] = [x + x]

hello : () <R, W>
hello = let x ← read
        in write x

main : Int [Private]
main =
   let [pin] = hash secret
   in [twice [dub] [42] + twice [trip] [52] + pin]
